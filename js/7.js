(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{396:function(e,n){e.exports='<h1 id="随机数生成">随机数生成</h1>\n<p>本文从 Math.random()出发,逐步分析如何生成一个随机非负整数 y, y∈[min, max],以及如何批量生成随机数并对它们作出某些限制.</p>\n<h2 id="1-生成随机数-y-y∈min-max">1. 生成随机数 y, y∈[min, max]</h2>\n<h3 id="11-生成随机数-x">1.1 生成随机数 x</h3>\n<p>通过<code>const x = Math.random()</code>获得 x,x∈[0, 1);</p>\n<h3 id="12-分析步骤">1.2 分析步骤</h3>\n<p>通过观察可知,从 x 变化到 y 大概需要如下几个步骤：</p>\n<ol>\n<li>最终结果: [0, 1) =&gt; [min, max]</li>\n<li>放大倍数(max - min) / 1 - 0: [0, 1) =&gt; [0, max -min)</li>\n<li>+min: [0, max - min] =&gt; [min, max)</li>\n<li>小数转整数, Math.ceil(): [min, max) =&gt; [min, max] //很难得到 min</li>\n</ol>\n<h3 id="13-代码">1.3 代码</h3>\n<pre><code>const createNonnegativeInteger = (min, max) =&gt; {\n    return Math.ceil(Math.random * (max - min) + min)\n}</code></pre><h3 id="14-问题">1.4 问题</h3>\n<p>这样做在有一定的问题,即 min 只有在 x=0 时才取到,为了使 y 在[min, max]的概率均匀分布,需要进行一些处理.需要通过 Math.floor()向下取整.对[min, max+1)向下取整可以得到均匀分布的[min, max].</p>\n<ol>\n<li>(max - min + 1) / 1 - 0: [0, 1) = [0, max - min + 1)</li>\n<li>+min: =&gt; [min, max + 1)</li>\n<li>Math.floor: =&gt; [min, max]</li>\n</ol>\n<h3 id="15-最终代码">1.5 最终代码</h3>\n<pre><code>const createNonnegativeInteger = (min, max) =&gt; {\n    return Math.floor(Math.random * (max - min + 1) + min)\n}</code></pre><h2 id="2-批量生成随机数">2. 批量生成随机数</h2>\n<h3 id="21-只是批量生成">2.1 只是批量生成</h3>\n<pre><code>const batchGenerator = (arr = [], {min, max, counter}) = {\n    const createSingle = createNonnegativeInteger.bind(null, min, max)\n    for (let i = 0; i &lt; counter; i++) {\n        arr.push(createSingle())\n    }\n    return arr\n}</code></pre><h3 id="22-对数组的操作">2.2 对数组的操作</h3>\n<p>如果想对批量生成的数组做点什么呢?比如去重、删除出现次数最多的数字?停一下,事实上,我们做的是将批量生成的数组交给下一个函数进行操作.即<code>nextFn()</code>,或许我们可以通过职责链模式来进行处理.</p>\n<pre><code>class DutyChain {\n    constructor({execute = null, next = null}) {\n        this.execute = execute\n        this.next = next\n    }\n    // 对数据进行处理,并将处理后的结果交给下一位\n    delivery(data, ...args) {\n        let value = data\n        if (typeof this.execute === &#39;function) {\n            value = this.execute(value, ...args) // 处理数据\n        }\n        if (this.next instanceof DutyChain &amp;&amp; typeof this.next.execute === &#39;function&#39;) {\n            return this.next.execute(value, ...args)  // 将数据交给下一位\n        }\n        return value\n    }\n}</code></pre><h3 id="23-数组去重">2.3 数组去重</h3>\n<pre><code>const unique = (arr) =&gt; {\n    return Array.from(new Set(arr))\n}\n\nconst uniqueAndReplenish = (arr, {min, max, counter}) {\n    let array = unique(arr)\n    const createSingle = getRandomNum.bind(null, min, max)\n    while (array.length &lt; counter) {\n        const num = createSingle()\n        // 判断数组中是否存在该数字\n        if (array.indexOf(num) === -1) {\n            array.push(num)\n        }\n    }\n    return array\n}</code></pre><h3 id="24-连接函数">2.4 连接函数</h3>\n<pre><code>const removeDuplicates = new DutyChain({ execute: uniqueAndReplenish, next: null });\nconst batch = new DutyChain({ execute: getBatchRandomNum, next: removeDuplicates });\nbatch.delivery([], { min, max, counter }) // 批量生成不重复的随机数</code></pre>'},639:function(e,n,t){"use strict";t.r(n);var a=t(1),r=t.n(a),i=t(250),l=t.n(i),o=(t(249),t(613)),u=t.n(o),c=(t(281),t(80)),m=t.n(c),x=(t(89),t(609)),h=t.n(x),d=(t(286),t(610)),f=t.n(d),s=(t(288),t(600)),p=t.n(s),y=(t(290),t(247)),v=t.n(y),g=(t(236),0),b=function(e){return l.a.create({name:"form"+ ++g})(e)},w=function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var a,r,i=t.call(e),l=[];try{for(;(void 0===n||n-- >0)&&!(a=i.next()).done;)l.push(a.value)}catch(e){r={error:e}}finally{try{a&&!a.done&&(t=i.return)&&t.call(i)}finally{if(r)throw r.error}}return l},E=function(){for(var e=[],n=0;n<arguments.length;n++)e=e.concat(w(arguments[n]));return e},S=function(e,n){return Math.floor(Math.random()*(n-e+1))+e},M=function(e,n){void 0===e&&(e=[]);for(var t=n.min,a=n.max,r=n.counter,i=S.bind(null,t,a),l=0;l<r;l++)e.push(i());return e},k=function(e,n){for(var t=n.min,a=n.max,r=n.counter,i=function(e){return Array.from(new Set(e))}(e),l=S.bind(null,t,a);i.length<r;){var o=l();-1===i.indexOf(o)&&i.push(o)}return i},A=function(){function e(e){var n=e.execute,t=void 0===n?null:n,a=e.next,r=void 0===a?null:a;this.execute=t,this.next=r}return e.prototype.delivery=function(n){for(var t,a=[],r=1;r<arguments.length;r++)a[r-1]=arguments[r];var i=n;return"function"==typeof this.execute&&(i=this.execute.apply(this,E([i],a))),this.next instanceof e&&"function"==typeof this.next.execute?(t=this.next).execute.apply(t,E([i],a)):i},e}(),D=t(33),O=t(396),q=t.n(O),C=t(246),F=function(){return(F=Object.assign||function(e){for(var n,t=1,a=arguments.length;t<a;t++)for(var r in n=arguments[t])Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r]);return e}).apply(this,arguments)},N=function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var a,r,i=t.call(e),l=[];try{for(;(void 0===n||n-- >0)&&!(a=i.next()).done;)l.push(a.value)}catch(e){r={error:e}}finally{try{a&&!a.done&&(t=i.return)&&t.call(i)}finally{if(r)throw r.error}}return l};n.default=b(function(e){var n=[{label:"最小值(min)",value:0,tag:"min",validator:function(n,t,a){var r=e.form.getFieldsValue();r.max<=r.min?a("min无法大于min"):a()}},{label:"最大值(max)",value:100,tag:"max",validator:function(n,t,a){var r=e.form.getFieldsValue();r.max<=r.min?a("max无法小于min"):a()}},{label:"随机数数量(counter)",value:10,tag:"counter",validator:function(n,t,a){var r=e.form.getFieldsValue(),i=r.max,l=r.min,o=r.unique,u=r.counter;!o&&i-l<u?a("在非重复模式下,请保证max - min >= counter"):a()}}],t=N(Object(a.useState)([]),2),i=t[0],o=t[1],c=new A({execute:k,next:null}),x=new A({execute:M,next:null}),d=N(Object(a.useState)(!0),2),s=d[0],y=d[1],g=e.form.getFieldDecorator,b=N(Object(a.useState)(!0),2);b[0],b[1];return r.a.createElement(v.a,{defaultActiveKey:"b"},r.a.createElement(v.a.TabPane,{key:"a",tab:"工具"},r.a.createElement(p.a,null,r.a.createElement(p.a.Title,{level:2,style:{textAlign:"center"}},"随机数生成")),r.a.createElement(l.a,F({onSubmit:function(n){return function(n){n.preventDefault(),e.form.validateFieldsAndScroll(function(e,n){var t=n.max,a=n.min,r=n.counter,i=n.unique;e||(x.next=i?null:c,o(x.delivery([],{min:a,max:t,counter:r})))})}(n)}},{labelCol:{sm:{span:4},md:{span:6}},wrapperCol:{sm:{span:24},md:{span:16}}}),n.map(function(e,n){return r.a.createElement(l.a.Item,{key:n,label:e.label},g(e.tag,{rules:[{validator:e.validator,type:"number"}],initialValue:e.value})(r.a.createElement(h.a,{style:{width:"100%"}})))}),r.a.createElement(l.a.Item,{key:"switch",label:"能否重复"},g("unique",{initialValue:!1})(r.a.createElement(f.a,null))),r.a.createElement("div",{className:D.center},r.a.createElement(m.a,{htmlType:"submit"},"随机数生成"))),r.a.createElement(m.a,{onClick:function(){return function(){if(0!==i.length){var e=s,n=i.slice().sort(function(n,t){return e?n-t:t-n});y(!s),o(n)}}()}},"排序"),r.a.createElement(u.a,{title:"随机数"},i.map(function(e,n){return r.a.createElement(u.a.Grid,{key:n,style:{textAlign:"center",width:"20%"}},e)}))),r.a.createElement(v.a.TabPane,{key:"b",tab:"代码分析"},r.a.createElement(C.a,{name:"random",md:q.a})))})}}]);